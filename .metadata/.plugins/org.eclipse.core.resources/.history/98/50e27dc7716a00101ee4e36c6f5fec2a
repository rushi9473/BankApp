package com.bank.model;




import jakarta.persistence.*;
import java.math.BigDecimal; // For transaction amount.
import java.time.LocalDateTime; // For modern date and time handling (Java 8 feature).

/**
 * Represents a financial transaction (deposit, withdrawal, transfer) on an account.
 */
@Entity
public class Transaction {

    @Id // Primary key.
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-generated ID.
    private Long id;

     // Many transactions can belong to one account. LAZY fetch.
    @ManyToOne(fetch = FetchType.LAZY)  // or EAGER if needed
    @JoinColumn(name = "account_id", nullable = false)// Foreign key column linking to the account.
    private Account account; // Reference to the Account involved in this transaction.

     // e.g., "DEPOSIT", "WITHDRAWAL", "TRANSFER"
    private String type;

     // BigDecimal for amount.
    private BigDecimal amount;

    
    private LocalDateTime timestamp; // Java 8 Date/Time API for transaction timestamp.

    private String description; // Optional description for the transaction.

     // e.g., "COMPLETED", "PENDING", "FAILED"
    private String status;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Account getAccount() {
		return account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public BigDecimal getAmount() {
		return amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	public LocalDateTime getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(LocalDateTime timestamp) {
		this.timestamp = timestamp;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
    

    // Note: No explicit getters/setters/constructors are needed due to Lombok annotations.
}

